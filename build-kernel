#!/bin/bash

function isInstalled() {
	if [[ -z "$1" ]]; then
		return 1
	fi

	if ! dpkg -l | grep -i "$1" &>/dev/null; then
		echo "build-kernel error : $1 is not installed"
		return 1
	fi
	return 0
}

checkDependencies() {
	local pkgs="$@"
	local pkgs=$(printf "%s\n" $pkgs)

	for pkg in ${pkgs[@]}; do
		isInstalled || return 1
	done
	return 0
}

function main() {
	if [[ ! "$1" =~ ^[1-9]\.[1-9]?[0-9]\.[1-9]?[0-9]{0,2}$ && ! "$1" =~ ^[1-9]\.[1-9]?[0-9]$ ]]; then
		echo "Error : you must provide a valid kernel version"
		return 0
	fi

	local version="$1"
	local major=$(echo "$version" | cut -d. -f1)
	local path="linux-$version"
	local file="$path.tar.xz"
	local url="https://cdn.kernel.org/pub/linux/kernel/v$major.x/$file"

	checkDependencies || return 1

	echo "[Info] Downloading kernel archive"
	cd /build
	wget -q $url
	if [[ $? -ne 0 ]]; then
		echo "Error : Failed to download archive '$url'"
		echo "Error : Verify that kernel version exists '$url'"
		return 1
	fi

	echo "[Info] Extracting kernel archive"
	tar -xf $file
	if [[ $? -ne 0 ]]; then
		echo "Error : Failed to extract archive '$file'"
		return 1
	fi

	if [[ ! -f "config" ]]; then
		echo "Error : kernel config must be present"
		return 1
	fi

	local conf="/build/$path/.config"
	local output="/output"

	cp /build/config $conf
	cd /build/$path

	# compiling kernel
	make KCONFIG_CONFIG=$conf -j$(nproc) bzImage
	if [[ $? -ne 0 ]]; then
		echo "[Error] Linux kernel $version could not be compiled"
		return 1
	fi

	cp /build/$path/arch/x86/boot/bzImage /output

	# kernel modules
	make KCONFIG_CONFIG=$conf -j$(nproc) modules
	if [[ $? -ne 0 ]]; then
		echo "[Error] Linux modules could not be compiled"
		return 1
	fi

	make KCONFIG_CONFIG=$conf -j$(nproc) modules_install
	if [[ $? -ne 0 ]]; then
		echo "[Error] Linux modules could not be compiled"
		return 1
	fi

	local mods="/lib/modules/$version"
	if [[ ! -d "$mods" ]]; then
		cp -r /lib/modules/* /output
	else
		cp -r "/lib/modules/$version" /output
	fi
	echo "[Info] Linux kernel $version has successfully compiled !"
	return 0
}

main "$@"
